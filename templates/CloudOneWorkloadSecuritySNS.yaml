AWSTemplateFormatVersion: 2010-09-09
Resources:
  C1WSGroup:
    Type: AWS::IAM::Group
  C1SNSPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: C1WSUserPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action:
          - 'sns:Publish'
          Resource: '*'
      Groups: [!Ref C1WSGroup]
  C1WSUser:
    Type: AWS::IAM::User
  C1WSGroupAddUser:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref 'C1WSGroup'
      Users: [!Ref 'C1WSUser']
  ACCESSKey:
    Type: AWS::IAM::AccessKey
    Properties: 
      UserName: !Ref C1WSUser
  LambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: c1-ws-lambdasecurityhub-role
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - securityhub:BatchImportFindings
                  - securityhub:BatchUpdateFindings
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Resource: '*'
  C1WSLambdaSecurityHub:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.lambda_handler
      Role: 
        Fn::GetAtt:
          - LambdaRole
          - Arn
      Runtime: "python3.13"
      MemorySize: 128
      Timeout: 50
      Code:
        S3Bucket: v1-server-and-workload-integration-with-aws-securityhub
        S3Key: lambda/latest.zip
  SNSC1WS:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: C1WorkloadSecuritySNS
      TopicName: C1WorkloadSecuritySNS
  Subscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt
        - C1WSLambdaSecurityHub
        - Arn
      Protocol: lambda
      TopicArn: !Ref SNSC1WS
    DependsOn: [ "C1WSLambdaSecurityHub" ]
  InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceArn: !Ref SNSC1WS
      FunctionName: !GetAtt
        - C1WSLambdaSecurityHub
        - Arn
Outputs:
  SNSTopic:
    Description: The SNS ARN to Workload Security
    Value: !Ref SNSC1WS
  AccessKey:
    Description: The Access key for Worload Security User
    Value: !Ref ACCESSKey
  SecretKey:
    Description: The Secret key for Worload Security User
    Value: !GetAtt ACCESSKey.SecretAccessKey
  LambdaFunction:
    Description: Lamba Function to send SNS Notification to Security Hub
    Value: !Ref C1WSLambdaSecurityHub
